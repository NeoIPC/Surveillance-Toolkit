```{r Validation rule 19: "The surgical site infection did not occur during the follow-up period of a surgical procedure"}

problems <- problems |>
  bind_rows(
    patients |>
      select(SITE_CODE, DEPARTMENT_NAME, DEPARTMENT_OU, NEOIPC_PATIENT_ID, PATIENT_TEI, key) |>
      rename(patient_key = key) |>
      inner_join(
        enrollments |>
          select(ENROLMENT_ID, ENROLMENT_DATE, key, patient) |>
          rename(enrollment_key = key),
        join_by(patient_key == patient)) |>
      inner_join(
        data$ssis |>
          select(enrollment, NEOIPC_SSI_INFECTION_TYPE, event, occurredAt) |>
          rename(EVENT_ID = event, SSI_DATE = occurredAt),
        join_by(enrollment_key == enrollment)) |>
      left_join(
        data$surgeries |>
          select(enrollment, occurredAt, NEOIPC_SURGERY_IMPLANT) |>
          rename(SURGERY_DATE = occurredAt),
        join_by(enrollment_key == enrollment, SSI_DATE > SURGERY_DATE)) |>
      mutate(
        SSI_OFFSET = as.integer(SSI_DATE - SURGERY_DATE),
        EVENT_TYPE = event_types("SSI"),
        EVENT_DATE = SSI_DATE,
        PROBLEM_ID = 19L,
        HAS_SURGERY = replace_na(SSI_OFFSET > 0 & (
          (NEOIPC_SSI_INFECTION_TYPE == 1 & SSI_OFFSET <= 30) |
            (NEOIPC_SSI_INFECTION_TYPE != 1 & NEOIPC_SURGERY_IMPLANT & SSI_OFFSET <= 90) |
            (NEOIPC_SSI_INFECTION_TYPE != 1 & !NEOIPC_SURGERY_IMPLANT & SSI_OFFSET <= 30)), FALSE)) |>
      filter(!HAS_SURGERY) |>
      select(
        SITE_CODE,
        DEPARTMENT_NAME,
        DEPARTMENT_OU,
        NEOIPC_PATIENT_ID,
        PATIENT_TEI,
        ENROLMENT_ID,
        ENROLMENT_DATE,
        EVENT_ID,
        EVENT_TYPE,
        EVENT_DATE,
        PROBLEM_ID,
        NEOIPC_SSI_INFECTION_TYPE
        ) |>
      distinct())

```
